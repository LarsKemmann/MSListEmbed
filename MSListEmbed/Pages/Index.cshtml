@page
@model IndexModel
@{
    ViewData["Title"] = "Listing";

    var emergencyNeeds = Model.ListItems
    .Where(i => i.Status == "A: Emergency Needs")
    .OrderBy(i => i.DisplayOrder).ThenBy(i => i.Title)
    .ToList();
    var currentNeeds = Model.ListItems
    .Where(i => i.Status == "B: Current Needs")
    .OrderBy(i => i.DisplayOrder).ThenBy(i => i.Title)
    .ToList();
    var needsAlreadyMet = Model.ListItems
    .Where(i => i.Status == "C: Needs Already Met")
    .OrderBy(i => i.DisplayOrder).ThenBy(i => i.Title)
    .ToList();
    var otherItems = Model.ListItems
    .Where(i => i.Status != "A: Emergency Needs" && i.Status != "B: Current Needs" && i.Status != "C: Needs Already Met")
    .OrderBy(i => i.DisplayOrder).ThenBy(i => i.Title)
    .ToList();
}

@if (Model.ListItems.Any())
{
    if (emergencyNeeds.Any())
    {
        <h2 style="color: #cc0000">‼ EMERGENCY Needs</h2>
        <p>These needs must be met within the next 72 hours.</p>
        @foreach (var item in emergencyNeeds)
        {
            <details>
                <summary>
                    <span style="font-weight: bold; font-size: x-large;">@item.Title</span><br />
                    @Html.Raw(item.Description)
                </summary>
                <b>Hosting Dates/Length:</b> @item.HostingDatesLength<br />
                <b>Location Details:</b> @item.LocationDetails<br />
                <b>Important Details:</b> @Html.Raw(item.ImportantDetails)<br />
                <button style="background-color: #77dd77" onclick="location.href='@item.GetLink(@Model.LinkTemplate)'">
                    I can help
                </button>
            </details>
        }
    }

    if (currentNeeds.Any())
    {
        <hr />
        <h2 style="color: #cc0000">Current Needs</h2>
        @foreach (var item in currentNeeds)
        {
            <details>
                <summary>
                    <span style="font-weight: bold; font-size: x-large;">@item.Title</span><br />
                    @Html.Raw(item.Description)
                </summary>
                <b>Hosting Dates/Length:</b> @item.HostingDatesLength<br />
                <b>Location Details:</b> @item.LocationDetails<br />
                <b>Important Details:</b> @Html.Raw(item.ImportantDetails)<br />
                <button style="background-color: #77dd77" onclick="location.href='@item.GetLink(@Model.LinkTemplate)'">
                    I can help
                </button>
            </details>
        }
    }

    if (needsAlreadyMet.Any())
    {
        <hr />
        <h2 style="color: #00cc00">Needs Already Met</h2>
        @foreach (var item in needsAlreadyMet)
        {
            <details>
                <summary>
                    <span style="font-weight: bold; font-size: x-large;">@item.Title</span><br />
                    @Html.Raw(item.Description)
                </summary>
                <b>Hosting Dates/Length:</b> @item.HostingDatesLength<br />
                <b>Location Details:</b> @item.LocationDetails<br />
                <b>Important Details:</b> @Html.Raw(item.ImportantDetails)<br />
            </details>
        }
    }

    if (otherItems.Any())
    {
        <hr />
        <h2 style="color: #cc0000">Other</h2>
        @foreach (var item in otherItems)
        {
            <details>
                <summary>
                    <span style="font-weight: bold; font-size: x-large;">@item.Title</span><br />
                    @Html.Raw(item.Description)
                </summary>
                <b>Hosting Dates/Length:</b> @item.HostingDatesLength<br />
                <b>Location Details:</b> @item.LocationDetails<br />
                <b>Important Details:</b> @Html.Raw(item.ImportantDetails)<br />
                <button style="background-color: #77dd77" onclick="location.href='@item.GetLink(@Model.LinkTemplate)'">
                    I can help
                </button>
            </details>
        }
    }
}
else
{
    <p>No items found.</p>
}
